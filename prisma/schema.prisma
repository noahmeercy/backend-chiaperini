// This isyourPrismaschemafile,
//learnmoreaboutitinthedocs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String
  password String
}

model Ficha {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  nome      String
  registro  String   @unique  // ðŸ”¥ Registro deve ser Ãºnico
  cargo     String?
  setor     String
  camisa    String?
  calca     String?
  calcado   String?
  admissao  String?
  trocas    trocaEpi[]
}

model Epi {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  codigo     String   @unique  // ðŸ”¥ CÃ³digo do EPI deve ser Ãºnico
  descricao  String
  ca         String   @unique  // ðŸ”¥ NÃºmero CA tambÃ©m deve ser Ãºnico
  trocas     trocaEpi[]
}

model trocaEpi {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  funcionario   Ficha    @relation(fields: [funcionarioId], references: [id], onDelete: Cascade) // ðŸ”¥ Se um funcionÃ¡rio for deletado, suas trocas tambÃ©m sÃ£o removidas
  funcionarioId String   @db.ObjectId
  epi           Epi      @relation(fields: [epiId], references: [id], onDelete: Cascade) // ðŸ”¥ Se um EPI for deletado, as trocas dele sÃ£o apagadas
  epiId         String   @db.ObjectId
  motivo        String
  quantidade    String
  dataTroca     DateTime @default(now())
}
